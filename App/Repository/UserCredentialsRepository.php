<?php

namespace App\Repository;

use App\Entities\UserCredentials;
use Bootstrap\Doctrine;

/**
 * UserCredentialsRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class UserCredentialsRepository extends \Doctrine\ORM\EntityRepository
{
    /**
     * @param $data
     * @return array
     */
    public static function updateUserCredentials($data): array
    {
        $em = Doctrine::getEntityManager();

        $userCredentials = new UserCredentials();
        $userCredentials->setEmail($data['email']);
        $userCredentials->setPassword($data['password']);

        try {
            $em->persist($userCredentials);
            $em->flush();

            return ['success' => 'true'];
        }
        catch (\Throwable $exception) {

            return [
                'success' =>false,
                'message' => 'OOPS! Something went wrong please try again later'
            ];
        }
    }

    /**
     * @param $data
     * @return array
     */
    public static function checkUserCredentials($data): array
    {
        $em = Doctrine::getEntityManager();
        $credentialRepository = $em->getRepository('bookingportal:UserCredentials');
        $userCredential = $credentialRepository->findOneBy(['email' => $data['email']]);

        if ($userCredential) {
            if ($data['password'] === $userCredential->getPassword()) {
              $userDetails = UserDetailsRepository::getUserDetails($data['email']);

                if ($userDetails) {
                    $_SESSION['token'] = 'generated';
                    $_SESSION['name'] = $userDetails->getName();
                    $_SESSION['email'] = $userDetails->getEmail();
                    $_SESSION['role'] = $userDetails->getRole();
                    $userDetails->setLastLogin(time());

                    try {
                        $em->merge($userDetails);
                        $em->flush();

                        return ['success' => 'true'];
                    }
                    catch (\Throwable $exception) {

                        return [
                            'success' => false,
                            'message' => 'OOPS! Something went wrong please try again later'
                        ];
                    }
                }

            }
            return [
                'error' => true,
                'message' => 'Invalid Credentials please try again later'
            ];
        }
        else
        {
            $userStatus = UserDetailsRepository::getUserStatus($data['email']);

            if($userStatus['success']) {

                if (!$userStatus['verified']) {
                    return [
                        'error' => true,
                        'message' => 'Your email address is not verified. Please try to verify email then login agin'
                    ];
                }

                if (!$userStatus['status']) {
                    return [
                        'error' => true,
                        'message' => 'Your account is blocked. Please contact our team to unblock yur account.'
                    ];
                }
            }
        }
        return [
            'error' => true,
            'message' => 'Your email address is not registered with us check your credentials if dont have a account Register account and continue to login.'
        ];
    }
}